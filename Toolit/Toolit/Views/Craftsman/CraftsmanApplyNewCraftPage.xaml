<?xml version="1.0" encoding="utf-8"?>

<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:toolit="clr-namespace:Toolit;assembly=Toolit"
             xmlns:resources="clr-namespace:Toolit.Resourses;assembly=Toolit"
             xmlns:effects="http://xamarin.com/schemas/2020/toolkit"
             xmlns:pancakeView="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
             xmlns:controls="clr-namespace:Toolit.Controls;assembly=Toolit"
             x:Class="Toolit.Views.Craftsman.CraftsmanApplyNewCraftPage"
             x:Name="Root">

    <ContentPage.Resources>
        <ResourceDictionary>
            <toolit:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter" />
            <effects:IsNotNullOrEmptyConverter x:Key="IsNotNullOrEmptyConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <toolit:CustomScrollView VerticalScrollBarVisibility="Never">
        <Grid Style="{StaticResource SmallTopGrid}"
              RowDefinitions="Auto, Auto">

            <!--  Topbox  -->
            <Grid Style="{StaticResource TopBoxSmall}"
                  Grid.Row="0">

                <Grid.Triggers>
                    <DataTrigger TargetType="Grid"
                                 Binding="{Binding HasSafeArea}"
                                 Value="True">
                        <Setter Property="Margin" Value="0, -52, 0, 0" />
                        <Setter Property="HeightRequest" Value="128" />
                    </DataTrigger>
                </Grid.Triggers>

                <Image Style="{StaticResource LeftTopBoxSmallImage}" />
                <Image Style="{StaticResource RightTopBoxSmallImage}" />
                <Label Style="{StaticResource TopBoxSmallHeader}"
                       Text="{x:Static resources:AppResources.CraftsmanApplyCompanyPageTitle}"
                       effects:SafeAreaEffect.SafeArea="True" />

                <!--  BackBtn  -->
                <StackLayout Style="{StaticResource TopBoxBackBtnStack}"
                             effects:SafeAreaEffect.SafeArea="True">

                    <!--  arrow  -->
                    <Image Style="{StaticResource ArrowLeft}" />
                    <Label Style="{StaticResource TopBoxSmallLeftBack}"
                           Text="{x:Static resources:AppResources.BackAction}" />
                    <StackLayout.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding BackCommand}" />
                    </StackLayout.GestureRecognizers>
                </StackLayout>
            </Grid>

            <!--  content  -->
            <StackLayout
                Grid.Row="1"
                Padding="40,40,40,64"
                Spacing="24"
                VerticalOptions="FillAndExpand">
                <Label
                    Style="{StaticResource BoldLargeLabel}"
                    HorizontalTextAlignment="Center"
                    Text="{x:Static resources:AppResources.CraftsmanRegistrationSelectTypeTitle}" />

                <Label
                    Style="{StaticResource BoldSmallLabel}"
                    HorizontalTextAlignment="Center"
                    Text="{x:Static resources:AppResources.CraftsmanRegistrationSelectTypeCaption}" />

                <!--  Your work types.  -->
                <FlexLayout JustifyContent="Center"
                            Wrap="Wrap"
                            BindableLayout.ItemsSource="{Binding CraftList}"
                            VerticalOptions="CenterAndExpand">
                    <BindableLayout.ItemTemplate>
                        <DataTemplate>
                            <pancakeView:PancakeView
                                BackgroundColor="{StaticResource LightGreen}"
                                Padding="8, 0"
                                Margin="8"
                                HeightRequest="32"
                                effects:TouchEffect.Command="{Binding BindingContext.CraftTappedCommand, 
                                                        Source={x:Reference Root}}"
                                effects:TouchEffect.CommandParameter="{Binding .}"
                                effects:TouchEffect.NativeAnimation="True">
                                <!-- craft local name -->
                                <Label Text="{Binding Craft.LocalName}"
                                       Style="{StaticResource RegularSmallLabel}"
                                       HorizontalOptions="Center"
                                       VerticalOptions="Center"
                                       TextColor="{StaticResource WhiteTextColor}"
                                       MaxLines="1">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label"
                                                     Binding="{Binding Craft.IsSelected}"
                                                     Value="False">
                                            <Setter Property="TextColor" Value="{StaticResource BlackTextColor}" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>

                                <pancakeView:PancakeView.Triggers>
                                    <DataTrigger TargetType="pancakeView:PancakeView"
                                                 Binding="{Binding Craft.IsSelected}"
                                                 Value="False">
                                        <Setter Property="BackgroundColor" Value="{StaticResource White}" />
                                    </DataTrigger>
                                </pancakeView:PancakeView.Triggers>
                            </pancakeView:PancakeView>
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </FlexLayout>

                <!--  Error  -->
                <Label
                    HorizontalTextAlignment="Center"
                    Text="{Binding WorkTypes.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                    TextColor="{StaticResource Red}" />

                <!--  Load pdf Header  -->
                <Label
                    Style="{StaticResource BoldSmallLabel}"
                    HorizontalTextAlignment="Center"
                    Text="{x:Static resources:AppResources.CraftsmanApplyInfoLoadCertificatePrompt}" />

                <!--  Upload Btn  -->
                <controls:PancakeButton
                    Command="{Binding UploadCertificateCommand}"
                    Style="{StaticResource PrimaryBtnSmall}"
                    BackgroundColor="{StaticResource LightGreen}"
                    Text="{x:Static resources:AppResources.CraftsmanApplyInfoLoadCertificateAction}" />

                <!--  Pdf Text  -->
                <Label
                    Style="{StaticResource RegularXtraSmallLabel}"
                    HorizontalTextAlignment="Center"
                    Text="{x:Static resources:AppResources.CraftsmanApplyInfoLoadCertificatesUploadedFormatString}"
                    IsVisible="{Binding CertificateFile, Converter={StaticResource IsNotNullOrEmptyConverter}}" />

                <!--  Apply Btn  -->
                <controls:PancakeButton
                    Command="{Binding MoveToApplyConfirmationCommand}"
                    IsEnabled="{Binding CanContinue}"
                    Style="{StaticResource PrimaryBtnSmall}"
                    Text="{x:Static resources:AppResources.CraftsmanApplyInfoSubmitAction}"
                    VerticalOptions="EndAndExpand" />

            </StackLayout>
        </Grid>
    </toolit:CustomScrollView>
</ContentPage>