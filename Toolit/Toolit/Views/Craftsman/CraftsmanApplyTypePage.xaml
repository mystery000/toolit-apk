<?xml version="1.0" encoding="utf-8"?>

<ContentPage
    x:Class="Toolit.Views.CraftsmanApplyTypePage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:custom="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
    xmlns:local="clr-namespace:Toolit"
    xmlns:resources="clr-namespace:Toolit.Resourses"
    xmlns:effects="http://xamarin.com/schemas/2020/toolkit"
    xmlns:controls="clr-namespace:Toolit.Controls;assembly=Toolit"
    BackgroundColor="{StaticResource PageColorLight}"
    Shell.TabBarIsVisible="False"
    x:Name="Root">

    <ContentPage.Resources>
        <ResourceDictionary>
            <local:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <StackLayout Spacing="0">

        <!--  Topbox  -->
        <Grid Style="{StaticResource TopBoxSmall}">

            <Grid.Triggers>
                <DataTrigger TargetType="Grid"
                             Binding="{Binding HasSafeArea}"
                             Value="True">
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="HeightRequest" Value="128" />
                </DataTrigger>
            </Grid.Triggers>

            <Image Style="{StaticResource LeftTopBoxSmallImage}" />
            <Image Style="{StaticResource RightTopBoxSmallImage}" />
            <Label Style="{StaticResource TopBoxSmallHeader}"
                   Text="{x:Static resources:AppResources.CraftsmanApplyCompanyPageTitle}"
                   effects:SafeAreaEffect.SafeArea="True" />

            <!--  BackBtn  -->
            <StackLayout Style="{StaticResource TopBoxBackBtnStack}"
                         effects:SafeAreaEffect.SafeArea="True">

                <!--  arrow  -->
                <Image Style="{StaticResource ArrowLeft}" />
                <Label Style="{StaticResource TopBoxSmallLeftBack}"
                       Text="{x:Static resources:AppResources.BackAction}" />
                <StackLayout.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding BackCommand}" />
                </StackLayout.GestureRecognizers>
            </StackLayout>
        </Grid>

        <!--  content  -->
        <StackLayout
            Padding="40,40,40,0"
            Spacing="24"
            VerticalOptions="FillAndExpand">
            <Label
                Style="{StaticResource BoldLargeLabel}"
                HorizontalTextAlignment="Center"
                Text="{x:Static resources:AppResources.CraftsmanRegistrationSelectTypeTitle}" />

            <Label
                Style="{StaticResource BoldSmallLabel}"
                HorizontalTextAlignment="Center"
                Text="{x:Static resources:AppResources.CraftsmanRegistrationSelectTypeCaption}" />

            <!--  Your work types.  -->
            <FlexLayout JustifyContent="Center"
                        Wrap="Wrap"
                        BindableLayout.ItemsSource="{Binding CraftList}"
                        VerticalOptions="CenterAndExpand">
                <BindableLayout.ItemTemplate>
                    <DataTemplate>
                        <custom:PancakeView CornerRadius="{StaticResource CornerRadius}"
                                            Shadow="{custom:ShadowMarkup Offset='2, 2', BlurRadius='4', Opacity='0.2'}"
                                            BackgroundColor="{StaticResource LightGreen}"
                                            Padding="12, 0"
                                            Margin="8"
                                            HeightRequest="32"
                                            effects:TouchEffect.Command="{Binding BindingContext.CraftTappedCommand, 
                                                        Source={x:Reference Root}}"
                                            effects:TouchEffect.CommandParameter="{Binding .}"
                                            effects:TouchEffect.NativeAnimation="True">
                            <!-- craft local name -->
                            <Label Text="{Binding LocalName}"
                                   Style="{StaticResource RegularSmallLabel}"
                                   HorizontalOptions="Center"
                                   VerticalOptions="Center"
                                   TextColor="{StaticResource WhiteTextColor}">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding IsSelected}"
                                                 Value="False">
                                        <Setter Property="TextColor" Value="{StaticResource BlackTextColor}" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>

                            <custom:PancakeView.Triggers>
                                <DataTrigger TargetType="custom:PancakeView"
                                             Binding="{Binding IsSelected}"
                                             Value="False">
                                    <Setter Property="BackgroundColor" Value="{StaticResource White}" />
                                </DataTrigger>
                            </custom:PancakeView.Triggers>
                        </custom:PancakeView>
                    </DataTemplate>
                </BindableLayout.ItemTemplate>
            </FlexLayout>

            <!--  Error  -->
            <Label
                HorizontalTextAlignment="Center"
                Text="{Binding WorkTypes.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                TextColor="{StaticResource Red}" />

            <!-- next step button -->
            <controls:PancakeButton
                Margin="24,40,24,0"
                Command="{Binding MoveToApplyCompanyCommand}"
                IsEnabled="{Binding CanContinue}"
                Style="{StaticResource PrimaryBtnSmall}"
                Text="{x:Static resources:AppResources.CraftsmanRegistrationMoveToStep2Action}"
                VerticalOptions="End" />

        </StackLayout>

        
        <!-- progress indicator -->
        <IndicatorView Margin="0,0, 0, 32"
                       HorizontalOptions="Center"
                       IndicatorColor="{StaticResource GrayTextColor}"
                       SelectedIndicatorColor="{StaticResource LightGreen}"
                       VerticalOptions="End"
                       Count="3"
                       Position="0"
                       effects:SafeAreaEffect.SafeArea="True">
            <IndicatorView.IndicatorTemplate>
                <DataTemplate>
                    <BoxView HeightRequest="3" WidthRequest="48" />
                </DataTemplate>
            </IndicatorView.IndicatorTemplate>
        </IndicatorView>

    </StackLayout>
</ContentPage>