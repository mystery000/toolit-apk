<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="Toolit.Views.CraftsmanApplyInfoPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:custom="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
    xmlns:customRenderer="clr-namespace:Toolit;assembly=Toolit"
    xmlns:local="clr-namespace:Toolit"
    xmlns:resources="clr-namespace:Toolit.Resourses"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    xmlns:controls="clr-namespace:Toolit.Controls;assembly=Toolit"
    BackgroundColor="{StaticResource PageColorLight}"
    Shell.TabBarIsVisible="False">

    <ContentPage.Resources>
        <local:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter" />
        <xct:IsNotNullOrEmptyConverter x:Key="IsNotNullOrEmptyConverter" />
        
        <ResourceDictionary>

            <Style x:Key="ValidationPancake" TargetType="custom:PancakeView">
                <Setter Property="CornerRadius" Value="8" />
                <Setter Property="Shadow" Value="{custom:ShadowMarkup Offset='2, 2', BlurRadius='4', Opacity='0.2'}" />
            </Style>
            <Style x:Key="ErrorStack" TargetType="StackLayout">
                <Setter Property="HeightRequest" Value="84" />
                <Setter Property="BackgroundColor" Value="{StaticResource PageColorLight}" />
            </Style>
            <Style x:Key="EditEntryHeader" TargetType="Label"
                   BasedOn="{StaticResource RegularXtraSmallLabel}">
                <Setter Property="Margin" Value="16,16,0,0" />
            </Style>
            <Style x:Key="ErrorLabel" TargetType="Label"
                   BasedOn="{StaticResource RegularXtraSmallLabel}">
                <Setter Property="Margin" Value="16,8" />
                <Setter Property="TextColor" Value="{StaticResource WhiteTextColor}" />
            </Style>
            <Style x:Key="EditEntry" TargetType="Editor">
                <Setter Property="FontSize" Value="{StaticResource SmallFontSize}" />
                <Setter Property="Margin" Value="16, 8" />
                <Setter Property="VerticalOptions" Value="Center" />
                <Setter Property="TextColor" Value="{StaticResource BlackTextColor}" />
                <Setter Property="PlaceholderColor" Value="{StaticResource GrayTextColor}" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>

    <customRenderer:CustomScrollView VerticalScrollBarVisibility="Never">

        <!--  Topbox  -->
        <Grid Style="{StaticResource SmallTopGrid}"
              RowDefinitions="Auto, Auto">
            <Grid Style="{StaticResource TopBoxSmall}">
                
                <Grid.Triggers>
                    <DataTrigger TargetType="Grid"
                                 Binding="{Binding HasSafeArea}"
                                 Value="True">
                        <Setter Property="Margin" Value="0, -52, 0, 0" />
                        <Setter Property="HeightRequest" Value="128" />
                    </DataTrigger>
                </Grid.Triggers>
                
                <Image Style="{StaticResource LeftTopBoxSmallImage}" />
                <Image Style="{StaticResource RightTopBoxSmallImage}" />
                <Label Style="{StaticResource TopBoxSmallHeader}" 
                       Text="{x:Static resources:AppResources.CraftsmanApplyCompanyPageTitle}"
                       xct:SafeAreaEffect.SafeArea="True" />

                <!--  BackBtn  -->
                <StackLayout Style="{StaticResource TopBoxBackBtnStack}"
                             xct:SafeAreaEffect.SafeArea="True">

                    <!--  arrow  -->
                    <Image Style="{StaticResource ArrowLeft}" />
                    <Label Style="{StaticResource TopBoxSmallLeftBack}" 
                           Text="{x:Static resources:AppResources.BackAction}" />
                    <StackLayout.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding BackCommand}" />
                    </StackLayout.GestureRecognizers>
                </StackLayout>
            </Grid>

            <!--  content  -->
            <StackLayout
                Grid.Row="1"
                Padding="40,40,40,60"
                Spacing="24">

                <!--  Big Header  -->
                <Label
                    Style="{StaticResource BoldLargeLabel}"
                    HorizontalTextAlignment="Center"
                    Text="{x:Static resources:AppResources.CraftsmanEditBioTitle}" />

                <!--  Small Header  -->
                <Label
                    Style="{StaticResource BoldSmallLabel}"
                    HorizontalTextAlignment="Center"
                    Text="{x:Static resources:AppResources.CraftsmanEditBioSubtitle}" />

                <!--  Small Text  -->
                <Label
                    Style="{StaticResource RegularXtraSmallLabel}"
                    HorizontalTextAlignment="Center"
                    Text="{x:Static resources:AppResources.CraftsmanEditBioDescription}" />

                <!--  Bio Header  -->
                <custom:PancakeView Style="{StaticResource ValidationPancake}">
                    <StackLayout Spacing="0">
                        <StackLayout Style="{StaticResource ErrorStack}">
                            <Label Style="{StaticResource EditEntryHeader}" 
                                   Text="{x:Static resources:AppResources.CraftsmanBioHeaderPrompt}" />
                            <customRenderer:CustomEntry HorizontalOptions="FillAndExpand"
                                Placeholder="{x:Static resources:AppResources.CraftsmanBioHeaderPlaceholder}"
                                Style="{StaticResource EditEntry}"
                                Text="{Binding AboutHeader.Value}" />
                        </StackLayout>

                        <!--  Error  -->
                        <StackLayout BackgroundColor="{StaticResource Red}" 
                                     IsVisible="{Binding AboutHeader.IsInvalidAndChanged}">
                            <Label Style="{StaticResource ErrorLabel}" 
                                   Text="{Binding AboutHeader.Errors, Converter={StaticResource FirstValidationErrorConverter}}" />
                        </StackLayout>
                    </StackLayout>
                    <custom:PancakeView.Triggers>
                        <DataTrigger
                            Binding="{Binding AboutHeader.IsInvalidAndChanged}"
                            TargetType="custom:PancakeView"
                            Value="True">
                            <Setter Property="Border" Value="{custom:BorderMarkup Color={StaticResource Red}, Thickness='1'}" />
                        </DataTrigger>
                    </custom:PancakeView.Triggers>
                </custom:PancakeView>

                <!--  Bio  -->
                <custom:PancakeView Style="{StaticResource ValidationPancake}">
                    <StackLayout Spacing="0">
                        <StackLayout BackgroundColor="{StaticResource PageColorLight}">
                            <Label Style="{StaticResource EditEntryHeader}" 
                                   Text="{x:Static resources:AppResources.CraftsmanBioPlaceholder}" />
                            <customRenderer:CustomEditor HorizontalOptions="FillAndExpand"
                                          VerticalOptions="FillAndExpand"
                                          HeightRequest="160"
                                          Margin="12"
                                          BackgroundColor="Transparent"
                                          Placeholder="{x:Static resources:AppResources.CraftsmanBioHeaderPlaceholder}"
                                          PlaceholderColor="{StaticResource GrayTextColor}"
                                          Style="{StaticResource EditEntry}"
                                          Text="{Binding AboutText.Value}" />
                        </StackLayout>

                        <!--  Error  -->
                        <StackLayout BackgroundColor="{StaticResource Red}" IsVisible="{Binding AboutText.IsInvalidAndChanged}">
                            <Label Style="{StaticResource ErrorLabel}" Text="{Binding AboutText.Errors, Converter={StaticResource FirstValidationErrorConverter}}" />
                        </StackLayout>
                    </StackLayout>
                    <custom:PancakeView.Triggers>
                        <DataTrigger
                            Binding="{Binding AboutText.IsInvalidAndChanged}"
                            TargetType="custom:PancakeView"
                            Value="True">
                            <Setter Property="Border" Value="{custom:BorderMarkup Color={StaticResource Red}, Thickness='1'}" />
                        </DataTrigger>
                    </custom:PancakeView.Triggers>
                </custom:PancakeView>

                <!--  Load pdf Header  -->
                <Label
                    Style="{StaticResource BoldSmallLabel}"
                    HorizontalTextAlignment="Center"
                    Text="{x:Static resources:AppResources.CraftsmanApplyInfoLoadCertificatePrompt}" />

                <!--  Upload Btn  -->
                <controls:PancakeButton
                    Command="{Binding UploadCertificateCommand}"
                    Style="{StaticResource PrimaryBtnSmall}"
                    BackgroundColor="{StaticResource LightGreen}"
                    Text="{x:Static resources:AppResources.CraftsmanApplyInfoLoadCertificateAction}" />

                <!--  Pdf Text  -->
                <Label
                    Style="{StaticResource RegularXtraSmallLabel}"
                    HorizontalTextAlignment="Center"
                    Text="{x:Static resources:AppResources.CraftsmanApplyInfoLoadCertificatesUploadedFormatString}"
                    IsVisible="{Binding CertificateFile, Converter={StaticResource IsNotNullOrEmptyConverter}}"/>

                <!--  Apply Btn  -->
                <controls:PancakeButton
                    Command="{Binding MoveToApplyConfirmationCommand}"
                    IsEnabled="{Binding CanContinue}"
                    Style="{StaticResource PrimaryBtnSmall}"
                    Text="{x:Static resources:AppResources.CraftsmanApplyInfoSubmitAction}"
                    VerticalOptions="EndAndExpand" />
            </StackLayout>
                
            <!-- progress indicator -->
            <IndicatorView Grid.Row="1"
                           HorizontalOptions="Center"
                           IndicatorColor="{StaticResource GrayTextColor}"
                           SelectedIndicatorColor="{StaticResource LightGreen}"
                           VerticalOptions="End"
                           Count="3"
                           Position="2"
                           xct:SafeAreaEffect.SafeArea="True"
                           Margin="0, 0, 0, 32">
                <IndicatorView.IndicatorTemplate>
                    <DataTemplate>
                        <BoxView HeightRequest="3" WidthRequest="48" />
                    </DataTemplate>
                </IndicatorView.IndicatorTemplate>
            </IndicatorView>
            
        </Grid>
    </customRenderer:CustomScrollView>
</ContentPage>